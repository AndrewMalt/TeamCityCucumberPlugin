apply plugin: 'java-library'
apply plugin: "com.diffplug.spotless"
apply plugin: 'io.qameta.allure'

group 'org.example'
//version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
        classpath "io.qameta.allure:allure-cucumber7-jvm:${allureVersion}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.18.0"
    }
}

repositories {
    mavenCentral()
}

allure {
    autoconfigure = true
    version = "${allureVersion}"

//    useCucumber2JVM {
//        version = "${allureVersion}"
//    }
}

spotless {
    java {
        targetExclude 'build/generated-sources/**'
        googleJavaFormat()
    }
}

dependencies {

    //JUnit5
    implementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    //Cucumber
    implementation 'io.cucumber:cucumber-java:7.11.1'
    implementation 'io.cucumber:cucumber-junit:7.11.1'

    //Rest-assured
    implementation 'io.rest-assured:rest-assured:5.3.0'

    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'com.typesafe:config:1.4.2'

    //jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'

    //allure
    implementation "io.qameta.allure:allure-cucumber7-jvm:${allureVersion}"
    implementation "io.qameta.allure:allure-selenide:${allureVersion}"
    implementation "io.qameta.allure:allure-rest-assured:${allureVersion}"
    implementation "io.qameta.allure:allure-java-commons:${allureVersion}"

    //browserup-proxy-core
    implementation 'com.browserup:browserup-proxy-core:2.1.2'

    //lombok
    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    //httpComponents
    api group: 'commons-io', name: 'commons-io', version: '2.11.0'

}

test {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom implementation
    }
}

jar {
    manifest {
        attributes "Main-Class": "io.cucumber.core.cli.Main"
    }
    baseName = '1'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.output + sourceSets.test.output
    into 'src/main/resources', {
        from 'src/main/resources'
    }
    into 'src/test/resources', {
        from 'src/test/resources'
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {

            System.properties.each { k, v ->
                systemProperty k, v
            }

            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
                    '--plugin', 'plugins.TeamCityPlugin',
                    '--plugin', 'core.api.TagCollectorPlugin',
                    '--threads', '1',
//                    '--threads', '3',
//                    '--plugin', 'teamcity',
//                    '--glue', 'gradle.cucumber',
//                    '--glue', 'TeamCityCucumberPlugin.hooks',
//                    '--glue', 'hooks',
//                   'TeamCityCucumberPlugin.steps',
//                    'src']
                    'src/test/resources']
            ignoreExitValue = true
        }
    }
}